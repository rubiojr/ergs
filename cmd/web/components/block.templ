package components

import (
	"github.com/rubiojr/ergs/cmd/web/components/types"
	"time"
)

// formatTimestamp returns standardized timestamp format used in unified block component
// Displays time in local timezone for better user experience (data is stored in UTC)
func formatTimestamp(t time.Time) string {
	return t.Local().Format("2006-01-02 15:04")
}

// formatTimestampRFC3339 returns a stable RFC3339 UTC timestamp for data attributes / cursors
func formatTimestampRFC3339(t time.Time) string {
	return t.UTC().Format(time.RFC3339)
}

// UnifiedBlock renders a single block using the firehose visual style so it can be reused
// across firehose, search results and individual datasource pages.
//
// Keep styling consistent by using existing "firehose-*" class names.
// The surrounding template is responsible for wrapping multiple blocks.
templ UnifiedBlock(block types.WebBlock, datasource string) {
	<div
		class="firehose-block-wrapper"
		data-block-id={ block.ID }
		data-block-source={ datasource }
		data-created-at={ formatTimestampRFC3339(block.CreatedAt) }
	>
		<div class="firehose-block-header">
			<span class="datasource-name">
				<a href={ templ.URL("/datasource/" + datasource) }>{ datasource }</a>
			</span>
			<span class="block-timestamp">{ formatTimestamp(block.CreatedAt) }</span>
		</div>
		<div class="firehose-block-content">
			@templ.Raw(block.FormattedText)
		</div>
	</div>
}
