package components

import (
	"github.com/rubiojr/ergs/cmd/web/components/types"
	"strconv"
	"time"
)

func FormatTime(t time.Time) string {
	return t.Format("2006-01-02 15:04")
}

func Truncate(s string, length int) string {
	if len(s) <= length {
		return s
	}
	return s[:length] + "..."
}

templ Datasource(data types.PageData) {
	@Layout(data) {
		<div class="firehose-page">
			@blocksPageHeader(data.Datasource, "Latest blocks from " + data.Datasource + ", ordered by creation time")
			if len(data.Results) > 0 {
				<div class="results-summary">
					<p>
						Showing { strconv.Itoa(data.TotalCount) } blocks (Page { strconv.Itoa(data.CurrentPage) })
					</p>
				</div>
				<div class="results-section">
					<div class="firehose-blocks">
						for ds, blocks := range data.Results {
							if ds == data.Datasource {
								for _, block := range blocks {
									@UnifiedBlock(block, ds)
								}
							}
						}
					</div>
				</div>
				<div class="pagination">
					if data.CurrentPage > 1 {
						<a
							href={ templ.URL("/datasource/" + data.Datasource + "?page=" + strconv.Itoa(data.CurrentPage-1) + "&limit=" + strconv.Itoa(data.PageSize)) }
							class="pagination-btn"
						>← Previous</a>
					}
					<span class="page-info">
						Page { strconv.Itoa(data.CurrentPage) }
					</span>
					if data.HasNextPage {
						<a
							href={ templ.URL("/datasource/" + data.Datasource + "?page=" + strconv.Itoa(data.CurrentPage+1) + "&limit=" + strconv.Itoa(data.PageSize)) }
							class="pagination-btn"
						>Next →</a>
					}
				</div>
			} else if data.Error != "" {
				<div class="no-results">
					<h3>Error Loading Blocks</h3>
					<p>{ data.Error }</p>
				</div>
			} else {
				<div class="no-results">
					<h3>No Blocks Found</h3>
					<p>This datasource doesn't contain any blocks yet.</p>
					<p>
						<a href="/firehose">View all recent blocks</a>
					</p>
				</div>
			}
		</div>
	}
}
