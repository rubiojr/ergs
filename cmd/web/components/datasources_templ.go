// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.924
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/rubiojr/ergs/cmd/web/components/types"
	"strconv"
)

func min(a, b int) int {
	if a < b {
		return a
	}
	return b
}

func Datasources(data types.PageData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"datasources-page\"><div class=\"page-header\"><h2><svg class=\"header-icon\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"></path></svg> Data Sources</h2><p>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(len(data.Datasources)))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/web/components/datasources.templ`, Line: 25, Col: 44}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, " configured sources ready for browsing</p></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if len(data.Datasources) > 0 {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<div class=\"datasources-container\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				for _, ds := range data.Datasources {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<a href=\"")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var4 templ.SafeURL
					templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinURLErrs(templ.URL("/datasource/" + ds.Name))
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/web/components/datasources.templ`, Line: 30, Col: 51}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "\" class=\"datasource-card\"><div class=\"card-icon\"><span class=\"icon-text\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var5 string
					templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(ds.Name[:min(2, len(ds.Name))])
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/web/components/datasources.templ`, Line: 32, Col: 64}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</span></div><div class=\"card-content\"><h3 class=\"datasource-name\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var6 string
					templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(ds.Name)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/web/components/datasources.templ`, Line: 35, Col: 45}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "</h3><span class=\"datasource-type\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var7 string
					templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(ds.Type)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/web/components/datasources.templ`, Line: 36, Col: 47}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</span> ")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					if ds.Stats != nil {
						if totalBlocks, ok := ds.Stats["total_blocks"].(int); ok && totalBlocks > 0 {
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<div class=\"stats-info\"><span class=\"block-count\">")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
							var templ_7745c5c3_Var8 string
							templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(totalBlocks))
							if templ_7745c5c3_Err != nil {
								return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/web/components/datasources.templ`, Line: 40, Col: 64}
							}
							_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, " blocks</span></div>")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
						} else {
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "<div class=\"stats-info\"><span class=\"no-data\">No data yet</span></div>")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
						}
					} else {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "<div class=\"stats-info\"><span class=\"no-data\">No data yet</span></div>")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "</div><div class=\"card-arrow\"><svg viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"></path></svg></div></a>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "</div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "<div class=\"empty-state\"><div class=\"empty-icon\"><svg viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z\"></path></svg></div><h3>No datasources configured</h3><p>Add some datasources to get started with data collection and browsing.</p><div class=\"help-link\"><code>ergs datasource add --name my-source --type github</code></div></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "</div><style>\n\t\t\t.datasources-page {\n\t\t\t\tmax-width: 900px;\n\t\t\t\tmargin: 0 auto;\n\t\t\t\tpadding: 1rem;\n\t\t\t}\n\n\t\t\t.page-header {\n\t\t\t\tmargin-bottom: 2rem;\n\t\t\t\ttext-align: center;\n\t\t\t}\n\n\t\t\t.page-header h2 {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\tgap: 0.75rem;\n\t\t\t\tcolor: #2c3e50;\n\t\t\t\tmargin-bottom: 0.5rem;\n\t\t\t\tfont-size: 1.75rem;\n\t\t\t\tfont-weight: 600;\n\t\t\t}\n\n\t\t\t.header-icon {\n\t\t\t\twidth: 28px;\n\t\t\t\theight: 28px;\n\t\t\t\tcolor: #007bff;\n\t\t\t}\n\n\t\t\t.page-header p {\n\t\t\t\tcolor: #6c757d;\n\t\t\t\tmargin: 0;\n\t\t\t\tfont-size: 1rem;\n\t\t\t}\n\n\t\t\t.datasources-container {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n\t\t\t\tgap: 1rem;\n\t\t\t}\n\n\t\t\t.datasource-card {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tgap: 1rem;\n\t\t\t\tbackground: white;\n\t\t\t\tborder: 1px solid #e9ecef;\n\t\t\t\tborder-radius: 12px;\n\t\t\t\tpadding: 1.25rem;\n\t\t\t\ttext-decoration: none;\n\t\t\t\tcolor: inherit;\n\t\t\t\ttransition: all 0.2s ease;\n\t\t\t\tbox-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n\t\t\t}\n\n\t\t\t.datasource-card:hover {\n\t\t\t\ttransform: translateY(-1px);\n\t\t\t\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n\t\t\t\tborder-color: #007bff;\n\t\t\t}\n\n\t\t\t.card-icon {\n\t\t\t\tflex-shrink: 0;\n\t\t\t\twidth: 48px;\n\t\t\t\theight: 48px;\n\t\t\t\tbackground: linear-gradient(135deg, #007bff, #0056b3);\n\t\t\t\tborder-radius: 10px;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t}\n\n\t\t\t.icon-text {\n\t\t\t\tcolor: white;\n\t\t\t\tfont-weight: 700;\n\t\t\t\tfont-size: 0.9rem;\n\t\t\t\ttext-transform: uppercase;\n\t\t\t}\n\n\t\t\t.card-content {\n\t\t\t\tflex: 1;\n\t\t\t\tmin-width: 0;\n\t\t\t}\n\n\t\t\t.datasource-name {\n\t\t\t\tmargin: 0 0 0.25rem 0;\n\t\t\t\tfont-size: 1.1rem;\n\t\t\t\tfont-weight: 600;\n\t\t\t\tcolor: #2c3e50;\n\t\t\t\toverflow: hidden;\n\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\twhite-space: nowrap;\n\t\t\t}\n\n\t\t\t.datasource-type {\n\t\t\t\tbackground: #f8f9fa;\n\t\t\t\tcolor: #6c757d;\n\t\t\t\tpadding: 0.125rem 0.5rem;\n\t\t\t\tborder-radius: 8px;\n\t\t\t\tfont-size: 0.75rem;\n\t\t\t\tfont-weight: 500;\n\t\t\t\ttext-transform: uppercase;\n\t\t\t\tletter-spacing: 0.5px;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tmargin-bottom: 0.5rem;\n\t\t\t}\n\n\t\t\t.stats-info {\n\t\t\t\tfont-size: 0.85rem;\n\t\t\t}\n\n\t\t\t.block-count {\n\t\t\t\tcolor: #28a745;\n\t\t\t\tfont-weight: 500;\n\t\t\t}\n\n\t\t\t.no-data {\n\t\t\t\tcolor: #dc3545;\n\t\t\t\tfont-weight: 500;\n\t\t\t}\n\n\t\t\t.card-arrow {\n\t\t\t\tflex-shrink: 0;\n\t\t\t\twidth: 24px;\n\t\t\t\theight: 24px;\n\t\t\t\tcolor: #6c757d;\n\t\t\t\ttransition: transform 0.2s ease;\n\t\t\t}\n\n\t\t\t.datasource-card:hover .card-arrow {\n\t\t\t\ttransform: translateX(3px);\n\t\t\t\tcolor: #007bff;\n\t\t\t}\n\n\t\t\t.card-arrow svg {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t}\n\n\t\t\t.empty-state {\n\t\t\t\ttext-align: center;\n\t\t\t\tpadding: 3rem 2rem;\n\t\t\t\tbackground: white;\n\t\t\t\tborder: 2px dashed #dee2e6;\n\t\t\t\tborder-radius: 12px;\n\t\t\t\tcolor: #6c757d;\n\t\t\t}\n\n\t\t\t.empty-icon {\n\t\t\t\twidth: 64px;\n\t\t\t\theight: 64px;\n\t\t\t\tmargin: 0 auto 1.5rem;\n\t\t\t\tcolor: #dee2e6;\n\t\t\t}\n\n\t\t\t.empty-icon svg {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t}\n\n\t\t\t.empty-state h3 {\n\t\t\t\tcolor: #495057;\n\t\t\t\tmargin-bottom: 0.75rem;\n\t\t\t\tfont-size: 1.25rem;\n\t\t\t\tfont-weight: 600;\n\t\t\t}\n\n\t\t\t.empty-state p {\n\t\t\t\tmargin: 0 0 1.5rem 0;\n\t\t\t\tfont-size: 1rem;\n\t\t\t}\n\n\t\t\t.help-link {\n\t\t\t\tbackground: #f8f9fa;\n\t\t\t\tborder: 1px solid #e9ecef;\n\t\t\t\tborder-radius: 8px;\n\t\t\t\tpadding: 0.75rem;\n\t\t\t\tfont-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n\t\t\t\tfont-size: 0.85rem;\n\t\t\t\tcolor: #495057;\n\t\t\t\tmax-width: fit-content;\n\t\t\t\tmargin: 0 auto;\n\t\t\t}\n\n\t\t\t@media (max-width: 768px) {\n\t\t\t\t.datasources-container {\n\t\t\t\t\tgrid-template-columns: 1fr;\n\t\t\t\t}\n\n\t\t\t\t.datasource-card {\n\t\t\t\t\tpadding: 1rem;\n\t\t\t\t}\n\n\t\t\t\t.page-header h2 {\n\t\t\t\t\tfont-size: 1.5rem;\n\t\t\t\t}\n\n\t\t\t\t.card-icon {\n\t\t\t\t\twidth: 40px;\n\t\t\t\t\theight: 40px;\n\t\t\t\t}\n\n\t\t\t\t.icon-text {\n\t\t\t\t\tfont-size: 0.8rem;\n\t\t\t\t}\n\n\t\t\t\t.datasource-name {\n\t\t\t\t\tfont-size: 1rem;\n\t\t\t\t}\n\t\t\t}\n\t\t</style>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Layout(data).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
