package components

import "github.com/rubiojr/ergs/cmd/web/components/types"

templ Layout(data types.PageData) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>{ data.Title }</title>
			<link rel="icon" type="image/x-icon" href="/static/favicon.ico"/>
			<link rel="icon" type="image/png" sizes="32x32" href="/static/favicon-32x32.png"/>
			<link rel="icon" type="image/png" sizes="16x16" href="/static/favicon-16x16.png"/>
			<link rel="stylesheet" href="/static/style.css"/>
			<link rel="stylesheet" href="/static/choices.min.css"/>
		</head>
		<body class="theme-polar-night">
			<header>
				<div class="container">
					<div class="header-content">
						<h1>
							<a href="/" style="text-decoration: none; color: inherit" class="brand">
								<span class="logo" style="display:inline-block;vertical-align:middle;margin-right:8px;">
									<svg width="36" height="24" viewBox="0 0 72 48" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Ergs Dune Logo">
										<defs>
											<linearGradient id="duneGrad" x1="0%" y1="0%" x2="0%" y2="100%">
												<stop offset="0%" stop-color="#ebcb8b"/>
												<stop offset="55%" stop-color="#d08770"/>
												<stop offset="100%" stop-color="#bf616a"/>
											</linearGradient>
										</defs>
										<path d="M4 34c6-2 12-6 18-10 9-6 14-6 22 0 3 2 6 4 10 5 4 2 8 2 14 1v10H4V34Z" fill="url(#duneGrad)"/>
										<path d="M4 34c6-2 12-6 18-10 9-6 14-6 22 0 3 2 6 4 10 5 4 2 8 2 14 1" fill="none" stroke="rgba(255,255,255,0.20)" stroke-width="2" stroke-linecap="round"/>
										<circle cx="52" cy="14" r="5" fill="#ebcb8b" opacity="0.9"/>
									</svg>
								</span>
								<span style="vertical-align:middle;display:inline-block;">Ergs Data Explorer</span>
							</a>
						</h1>
						<nav>
							<a href="/">Home</a>
							<a href="/search">Search</a>
							<a href="/firehose">Firehose</a>
							<a href="/datasources">Datasources</a>
						</nav>
						<div class="theme-toggle" id="theme-toggle">
							<div class="theme-dot polar-night" data-theme="polar-night" title="Polar Night"></div>
							<div class="theme-dot frost" data-theme="frost" title="Frost"></div>
						</div>
					</div>
				</div>
			</header>
			<main>
				<div class="container">
					if data.Error != "" {
						<div class="alert alert-error">
							<strong>Error:</strong> { data.Error }
						</div>
					}
					if data.Success != "" {
						<div class="alert alert-success">
							<strong>Success:</strong> { data.Success }
						</div>
					}
					{ children... }
				</div>
			</main>
			if data.Version != "" {
				<footer>
					<div class="container">
						<div class="footer-content" style="padding: 0.75rem 0; font-size: 0.75rem; color: #6c757d; text-align: center;">
							<span>Ergs v{ data.Version }</span>
						</div>
					</div>
				</footer>
			}
			<script>
				// Theme + active navigation handling
				document.addEventListener("DOMContentLoaded", function () {
					// Active nav highlighting
					const currentPath = window.location.pathname;
					document.querySelectorAll("nav a").forEach((link) => {
						if (
							link.getAttribute("href") === currentPath ||
							(currentPath.startsWith("/datasource/") &&
								link.getAttribute("href") === "/datasources") ||
							(currentPath.startsWith("/firehose") &&
								link.getAttribute("href") === "/firehose")
						) {
							link.classList.add("active");
						}
					});

					// Theme handling
					const defaultTheme = "polar-night"; // default dark theme (matches initial body class)
					const stored = localStorage.getItem("ergs-theme") || defaultTheme;
					applyTheme(stored);

					function applyTheme(name) {
						document.body.classList.remove("theme-polar-night", "theme-frost");
						document.body.classList.add("theme-" + name);
						localStorage.setItem("ergs-theme", name);
						document
							.querySelectorAll(".theme-dot")
							.forEach((d) => d.classList.remove("active"));
						const activeDot = document.querySelector(
							'.theme-dot[data-theme="' + name + '"]'
						);
						if (activeDot) activeDot.classList.add("active");
					}

					document.querySelectorAll(".theme-dot").forEach((dot) => {
						dot.addEventListener("click", () =>
							applyTheme(dot.getAttribute("data-theme"))
						);
					});
				});
			</script>
			<script src="/static/choices.min.js"></script>
			<script src="/static/script.js"></script>
		</body>
	</html>
}
