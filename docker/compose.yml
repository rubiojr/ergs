services:
  # Init container to set up proper permissions for the data volume
  ergs-init:
    container_name: ergs-init
    image: ghcr.io/rubiojr/ergs
    user: "0:0"
    command:
      [
        "sh",
        "-c",
        "mkdir -p /data/internal && chown -R 1000:1000 /data && echo 'Permissions fixed'",
      ]
    volumes:
      - ergs-data:/data
    restart: "no"

  # Run database migrations before starting other services
  ergs-migrate:
    image: ghcr.io/rubiojr/ergs
    container_name: ergs-migrate
    user: "1000:1000"
    # Run a permissions fix (defensive) before applying migrations
    command:
      [
        "sh",
        "-c",
        "chown -R 1000:1000 /data || true; exec ergs migrate --config /config/config.toml",
      ]
    volumes:
      - ergs-data:/data
      - ./config.toml:/config/config.toml:ro,z
    depends_on:
      ergs-init:
        condition: service_completed_successfully
    restart: "no"

  # Ergs scheduler daemon - fetches data from datasources
  ergs-serve:
    image: ghcr.io/rubiojr/ergs
    container_name: ergs-serve
    user: "1000:1000"
    command: ["ergs", "serve", "--config", "/config/config.toml"]
    volumes:
      - ergs-data:/data
      - ./config.toml:/config/config.toml:ro,z
    environment:
      - TZ=UTC
    restart: unless-stopped
    depends_on:
      ergs-migrate:
        condition: service_completed_successfully
      ergs-init:
        condition: service_completed_successfully
    healthcheck:
      disable: true

  # Ergs web interface - serves the web UI and API
  ergs-web:
    image: ghcr.io/rubiojr/ergs
    container_name: ergs-web
    user: "1000:1000"
    command:
      ["ergs", "web", "--host", "0.0.0.0", "--config", "/config/config.toml"]
    ports:
      - "7117:8080"
    volumes:
      - ergs-data:/data
      - ./config.toml:/config/config.toml:ro,z
    environment:
      - TZ=UTC
    restart: unless-stopped
    depends_on:
      ergs-migrate:
        condition: service_completed_successfully
      ergs-serve:
        condition: service_started
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/",
        ]
      interval: 30s
      timeout: 3s
      start_period: 5s
      retries: 3

  # Ergs importer API - accepts blocks via HTTP API
  ergs-importer:
    image: ghcr.io/rubiojr/ergs
    container_name: ergs-importer
    user: "1000:1000"
    command:
      [
        "ergs",
        "importer",
        "--host",
        "0.0.0.0",
        "--port",
        "7119",
        "--config",
        "/config/config.toml",
      ]
    ports:
      - "7119:7119"
    volumes:
      - ergs-data:/data
      - ./config.toml:/config/config.toml:ro,z
    environment:
      - TZ=UTC
    restart: unless-stopped
    depends_on:
      ergs-migrate:
        condition: service_completed_successfully
      ergs-serve:
        condition: service_started
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:7119/health",
        ]
      interval: 30s
      timeout: 3s
      start_period: 5s
      retries: 3

volumes:
  ergs-data:
    driver: local
